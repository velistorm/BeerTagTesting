{
	"info": {
		"_postman_id": "445bfa5b-b1ac-4167-996b-72e52dc43b4b",
		"name": "BeerTagTesting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37999410"
	},
	"item": [
		{
			"name": "Beers",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get All Posts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = pm.response.text();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to have necessary sections\", function () {\r",
											"    pm.expect(resp).to.include(\"id\");\r",
											"    pm.expect(resp).to.include(\"abv\");\r",
											"    pm.expect(resp).to.include(\"name\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/beers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"beers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Single Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = pm.response.text();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to have necessary sections\", function () {\r",
											"    pm.expect(resp).to.include(\"id\");\r",
											"    pm.expect(resp).to.include(\"abv\");\r",
											"    pm.expect(resp).to.include(\"name\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Updated API beer\",\r\n  \"abv\": 7,\r\n  \"styleId\": 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/beers/34",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"beers",
										"34"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "Create A Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"postId\", response.id);\r",
											"console.log(\"Saved postId:\", response.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var resp = pm.response.text();\r",
											"\r",
											"pm.test(\"Response to have necessary sections\", function () {\r",
											"    pm.expect(resp).to.include(\"id\");\r",
											"    pm.expect(resp).to.include(\"abv\");\r",
											"    pm.expect(resp).to.include(\"name\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 5;\r",
											"        maxValue = 5;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"pm.variables.set('randomString', randomString());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "name",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{randomString}}\",\r\n  \"abv\": 4,\r\n  \"styleId\": 4\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/beers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"beers"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "Update A Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"//pm.expect(jsonData.id).to.eql(pm.environment.get(\"id_user\"));\r",
											"\r",
											"pm.test(\"Id is equal to the variable\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get('postId'))\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Updated\",\r\n  \"abv\": 5,\r\n  \"styleId\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/beers/{{postId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"beers",
										"{{postId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Delete A Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.unset(\"postId\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/beers/{{postId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"beers",
										"{{postId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "Get All Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = pm.response.text();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to have necessary sections\", function () {\r",
											"    pm.expect(resp).to.include(\"id\");\r",
											"    pm.expect(resp).to.include(\"username\");\r",
											"    pm.expect(resp).to.include(\"firstName\");\r",
											"    pm.expect(resp).to.include(\"lastName\");\r",
											"    pm.expect(resp).to.include(\"email\");\r",
											"    pm.expect(resp).to.include(\"admin\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "todor pass1",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get A Single User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = pm.response.text();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to have necessary sections\", function () {\r",
											"    pm.expect(resp).to.include(\"id\");\r",
											"    pm.expect(resp).to.include(\"username\");\r",
											"    pm.expect(resp).to.include(\"firstName\");\r",
											"    pm.expect(resp).to.include(\"lastName\");\r",
											"    pm.expect(resp).to.include(\"email\");\r",
											"    pm.expect(resp).to.include(\"admin\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "todor pass1",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/users/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User's Wishlist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = pm.response.text();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response to have necessary sections\", function () {\r",
											"    pm.expect(resp).to.include(\"id\");\r",
											"    pm.expect(resp).to.include(\"name\");\r",
											"    pm.expect(resp).to.include(\"abv\");\r",
											"    pm.expect(resp).to.include(\"style\");\r",
											"    pm.expect(resp).to.include(\"photoUrl\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "todor pass1",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/users/1/wish-list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"1",
										"wish-list"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PUT",
					"item": [
						{
							"name": "Put A Post In Wishlist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/1/wish-list/37",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"1",
										"wish-list",
										"37"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "Delete A Post From Wishlist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/1/wish-list/37",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"1",
										"wish-list",
										"37"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({ \r",
					"    key: \"Authorization\",\r",
					"    value: \"todor pass1\" \r",
					"});\r",
					"\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8081"
		},
		{
			"key": "postId",
			"value": "",
			"type": "string"
		}
	]
}